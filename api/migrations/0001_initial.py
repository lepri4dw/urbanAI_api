# Generated by Django 5.2.1 on 2025-05-28 17:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('geometry', models.TextField()),
                ('area_km2', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BuildingZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone_type', models.CharField(choices=[('residential', 'Жилая зона'), ('commercial', 'Коммерческая'), ('industrial', 'Промышленная'), ('educational', 'Образовательная'), ('recreational', 'Рекреационная'), ('restricted', 'Ограниченная')], max_length=20)),
                ('geometry', models.TextField()),
                ('can_build_school', models.BooleanField(default=False)),
                ('max_building_height', models.IntegerField(null=True)),
                ('restrictions', models.TextField(blank=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
            ],
        ),
        migrations.CreateModel(
            name='FireStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=100)),
                ('response_radius_km', models.FloatField(default=3.0)),
                ('vehicles_count', models.IntegerField()),
                ('personnel_count', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('hospital_type', models.CharField(choices=[('clinic', 'Поликлиника'), ('hospital', 'Больница'), ('emergency', 'Скорая помощь'), ('specialized', 'Специализированная')], max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('beds_count', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
            ],
        ),
        migrations.CreateModel(
            name='OptimalLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('score', models.FloatField()),
                ('population_coverage', models.IntegerField()),
                ('avg_distance', models.FloatField()),
                ('competition_factor', models.FloatField()),
                ('accessibility_score', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='SubDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=30, unique=True)),
                ('geometry', models.TextField()),
                ('area_km2', models.FloatField()),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolDemand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('current_capacity', models.IntegerField()),
                ('required_capacity', models.IntegerField()),
                ('shortage', models.IntegerField()),
                ('avg_distance_to_school', models.FloatField()),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
                ('sub_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subdistrict')),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('school_type', models.CharField(choices=[('primary', 'Начальная школа'), ('secondary', 'Средняя школа'), ('high', 'Старшая школа'), ('gymnasium', 'Гимназия'), ('lyceum', 'Лицей')], max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('capacity', models.IntegerField()),
                ('current_enrollment', models.IntegerField()),
                ('is_active', models.BooleanField(default=True)),
                ('established_year', models.IntegerField()),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
                ('sub_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subdistrict')),
            ],
        ),
        migrations.CreateModel(
            name='PopulationData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('population', models.IntegerField()),
                ('density_per_km2', models.FloatField()),
                ('children_0_6', models.IntegerField(default=0)),
                ('children_7_17', models.IntegerField(default=0)),
                ('adults_18_64', models.IntegerField(default=0)),
                ('seniors_65_plus', models.IntegerField(default=0)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.district')),
                ('sub_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subdistrict')),
            ],
            options={
                'unique_together': {('district', 'sub_district', 'year')},
            },
        ),
    ]
